/**
 * PluckedPanel.java
 * This class provides the JPanel objects for the PluckedSource widget and also handles events 
 * generated by the FloatBoxes pertaining to the Plucked Widget fields.
 * Updated by: Jeremy Davis July 1, 2008
 */

package org.webtop.module.waves;

import javax.swing.*; 
import java.awt.event.*; 

import org.webtop.util.WTMath; 
import org.sdl.math.FPRound;
import org.webtop.wsl.client.*; 
import org.sdl.gui.numberbox.*;

public class PluckedPanel extends WidgetPanel implements NumberBox.Listener {

	private FloatBox ampField, widthField, xField, yField; 
	
	private SingleWaveSource source;
	
	public PluckedPanel(WSLPlayer player){
		super(player); 
		
		add(new JLabel("Amplitude:", JLabel.RIGHT)); 
		ampField = new FloatBox(-20,100,10,3); 
		ampField.addNumberListener(this); 
		ampField.setEnabled(true); 
		add(ampField); 
		
		add(new JLabel("Width:", JLabel.RIGHT)); 
		widthField = new FloatBox(0.1f, 500, 5, 3); 
		widthField.addNumberListener(this); 
		ampField.setEnabled(true); //Really?  This was in the old source [JD]
		widthField.setEnabled(true); 
		add(widthField); 
		
		add(new JLabel("X0:", JLabel.RIGHT)); 
		xField = new FloatBox(-50, 50, 0, 3); 
		xField.addNumberListener(this); 
		xField.setEnabled(true); 
		add(xField); 
		
		add(new JLabel("Y0:", JLabel.RIGHT)); 
		yField = new FloatBox(-50, 50, 0, 3); 
		yField.addNumberListener(this); 
		yField.setEnabled(true); 
		add(yField); 
	}
	
	public void show(PluckedSource ws){
		
		source = ws; 
		if(ws==null){
			ampField.setEnabled(false); 
			widthField.setEnabled(false); 
			xField.setEnabled(false); 
			yField.setEnabled(false); 
		}
		else{
			ampField.setEnabled(true); 
			widthField.setEnabled(true); 
			xField.setEnabled(true); 
			yField.setEnabled(true); 
			setAmplitude(ws.getAmplitude()); 
			setWidth(ws.getWidth()); 
			setX(ws.getX()); 
			setY(ws.getY());
		}
	}
	
	public void show(StruckSource ss){
		if(ss==null){
			ampField.setEnabled(false); 
			widthField.setEnabled(false); 
			xField.setEnabled(false); 
			yField.setEnabled(false); 
		}
		else{
			ampField.setEnabled(true); 
			widthField.setEnabled(true); 
			xField.setEnabled(true); 
			yField.setEnabled(true); 
			setAmplitude(ss.getAmplitude()); 
			setWidth(ss.getWidth()); 
			setX(ss.getX());
			setY(ss.getY()); 
		}
	}
	
	public void setAmplitude(float a){
		System.out.println("PluckedPanel::setAmplitude");
		ampField.silence(); 
		ampField.setValue(FPRound.toSigVal(a,5));
	}
	
	public void setWidth(float w){
		widthField.silence(); 
		widthField.setValue(FPRound.toSigVal(w,5));
	}
	
	public void setX(float x){
		xField.silence(); 
		xField.setValue(FPRound.toSigVal(x, 5)); 
	}
	
	public void setY(float y){
		yField.silence(); 
		yField.setValue(FPRound.toSigVal(y,5)); 
	}
	
	public void setXY(float X, float Y){
		setX(X); 
		setY(Y);
	}
	
	//The following 3 methods implement NumberBox.Listener
	public void numChanged(NumberBox eventSource, Number newVal){
		if(wslPlayer.isPlaying())
			return;
		
		float f = newVal.floatValue(); 
		
		if(eventSource == ampField){
			source.setAmplitude(f, true); 
		}
		else if(eventSource == widthField){
			source.setWidth(f, true); 
		}
		else if(eventSource == xField){
			source.setX(f, true);
		}
		else if(eventSource == yField){
			source.setY(f, true);
		}
		
		if(!engine.isPlaying())
			engine.update(); 
	}
	
	public void invalidEntry(NumberBox src, Number badVal){
		engine.statusBar.setText("Invalid Entry"); 
	}
	
	public void boundsForcedChange(NumberBox src, Number oldVal){}
}
